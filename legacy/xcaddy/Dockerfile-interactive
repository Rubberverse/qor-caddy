ARG IMAGE_REPOSITORY=docker.io/library
ARG IMAGE_ALPINE_VERSION=edge

FROM $IMAGE_REPOSITORY/alpine:$IMAGE_ALPINE_VERSION AS alpine-builder
WORKDIR /app

ARG BUILDPLATFORM
ARG TARGETOS
ARG TARGETARCH
ARG TARGETPLATFORM

ARG ALPINE_REPO_URL=https://dl-cdn.alpinelinux.org/alpine
ARG ALPINE_REPO_VERSION=edge
ENV GO_XCADDY_VERSION=latest
ENV GO_CADDY_VERSION=latest
ENV GOPATH=/app/go
ENV GOCACHE=/app/go/cache
ENV GIT_DIR=/app/git
ENV GIT_WORKTREE=/app/worktree
ENV CGO_ENABLED=0
ENV XCADDY_SKIP_CLEANUP=1
ENV XCADDY_DEBUG=0 
ENV XCADDY_SUDO=0
ENV XCADDY_SETCAP=1
ENV XCADDY_GO_BUILD_FLAGS="-a --trimpath -ldflags '-w -s'"

COPY --chmod=0755 scripts/array-helper.sh /app/helper/array-helper.sh

RUN apk upgrade --no-cache; apk add --no-cache --virtual build_ess --repository=${ALPINE_REPO_URL}/${ALPINE_REPO_VERSION}/main \
        bash            \
        git             \
        ca-certificates \
        go              \
    && GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    && go install github.com/caddyserver/xcaddy/cmd/xcaddy@${GO_XCADDY_VERSION}

CMD tail -f /dev/null