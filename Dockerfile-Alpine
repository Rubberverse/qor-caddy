ARG IMAGE_GHCR_REPOSITORY=qhcr.io/rubberverse
ARG QOR_HELPER_TYPE=qor-helper-dev:donotuse-latest

FROM --platform=$TARGETPLATFORM ${IMAGE_GHCR_REPOSITORY}/${QOR_HELPER_TYPE} AS qor-helper-dev
# le edging the FROM prompt moment
FROM docker.io/library/alpine:edge AS qor-caddy
WORKDIR /app

ARG ALPINE_REPO_URL=https://dl-cdn.alpinelinux.org/alpine \
    ALPINE_REPO_VERSION=v3.19 \
    CONT_USER=caddy \
    CONT_UID=1001

LABEL stage=qor-caddy

COPY --from=qor-helper-dev --chmod=0755 /app/bin/caddy /app/caddy
COPY --chmod=755 scripts/docker-entrypoint.sh /app/scripts/docker-entrypoint.sh

RUN apk upgrade --no-cache; apk add --no-cache --repository=${ALPINE_REPO_URL}/${ALPINE_REPO_VERSION}/main \
        ca-certificates \
        openssl         \
    && apk add --no-cache --virtual build-deps --repository=$(ALPINE_REPO_URL)/${ALPINE_REPO_VERSION}/main \
        libcap \
        libcap-setcap \
    && adduser \
        --home "/app"          \
        --shell "/bin/ash"     \
        --uid "$CONT_UID"      \
        --disabled-password    \
        --no-create-home       \
        "$CONT_USER" \
    && mkdir -p /app/logs \
    && setcap 'cap_net_bind_service+ep' /app/caddy \
    && chown -R "$CONT_UID" /srv /app \
    && apk del --rdepends build-deps

USER "${CONT_UID}"

ENTRYPOINT /app/scripts/docker-entrypoint.sh
