# v1.0.3 - Fix single and multi-architecture build process
ARG IMAGE_REPOSITORY=docker.io/library
ARG IMAGE_ALPINE_VERSION=1.22.2-alpine3.19

FROM $IMAGE_REPOSITORY/golang:$IMAGE_ALPINE_VERSION AS alpine-builder
WORKDIR /app

ARG TARGETOS
ARG TARGETARCH
ARG XCADDY_MODULES

# Some environmental variables don't get applied properly when nested
ENV CGO_ENABLED=0
ENV XCADDY_SKIP_CLEANUP=1
ENV XCADDY_DEBUG=0
ENV XCADDY_SUDO=0
ENV XCADDY_SETCAP=0
ENV XCADDY_GO_BUILD_FLAGS="-a --trimpath -ldflags '-w -s'"

LABEL stage=alpine-builder

ARG ALPINE_REPO_URL=https://dl-cdn.alpinelinux.org/alpine \
    ALPINE_REPO_VERSION=v3.19 \
    GO_XCADDY_VERSION=latest \
    GO_CADDY_VERSION=latest \
    GOPATH=/app/go \
    GOCACHE=/app/go/cache \
    GOOS $TARGETOS \
    GOARCH $TARGETARCH \
    GIT_DIR=/app/git \
    GIT_WORKTREE=/app/worktree

COPY --chmod=0755 /scripts/array-helper.sh \ 
    /app/helper/array-helper.sh

RUN apk upgrade --no-cache; apk add --no-cache --virtual build_ess --repository=${ALPINE_REPO_URL}/${ALPINE_REPO_VERSION}/main \
        bash            \
        git             \
        ca-certificates \
    && go install github.com/caddyserver/xcaddy/cmd/xcaddy@${GO_XCADDY_VERSION} \
    && /app/helper/array-helper.sh \
    && apk del --rdepends \
        build_ess \
    && rm -rf /app/go /app/git /tmp

FROM docker.io/library/debian:bookworm-slim AS qor-caddy
WORKDIR /app

ENV DEBIAN_FRONTEND=noninteractive
ARG CONT_USER=caddy
ARG CONT_SHELL=/bin/sh
ARG CONT_UID=1001

COPY --from=alpine-builder --chmod=0755 /app/bin/caddy /app/bin/caddy
COPY --chmod=0755 /scripts/docker-entrypoint.sh /app/scripts/docker-entrypoint.sh

RUN apt-get update; apt-get upgrade -y; apt install -y \
        ca-certificates \
        openssl \
    && useradd \
        --home-dir "/app" \
        --shell "$CONT_SHELL" \
        --uid "$CONT_UID" \
        --no-create-home \
        "$CONT_USER" \
    && mkdir -p /var/www/ \
    && chown -R "$CONT_UID":"$CONT_UID" /var/www /app \
    && rm -rf /var/cache/apt

USER $CONT_UID

ENTRYPOINT /app/scripts/docker-entrypoint.sh